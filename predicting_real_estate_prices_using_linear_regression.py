# -*- coding: utf-8 -*-
"""Predicting Real estate prices using Linear Regression

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-qGf-iB_LIDrf0QmSK9uVjTdtEhc4cw0
"""

#import statements
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
import pickle

# Commented out IPython magic to ensure Python compatibility.
#Access to google drive files
from google.colab import drive
drive.mount('/gdrive')
# %cd /gdrive

#get data
data = pd.read_csv(r"/gdrive/MyDrive/Learning ML/Linear Regression/Real_estate.csv")

#select data we want
y_var = np.array(data)[:,-1] #what we want to predict
x_vars = np.array(data)[:,2:-1]

"""# Singe Model Creation"""

#split data for traingin & testing
x_train, x_test, y_train, y_test = train_test_split(x_vars,y_var,test_size=0.1)

#train model
linear_model = LinearRegression()
linear_model.fit(x_train,y_train)

#test model
accuracy = linear_model.score(x_test, y_test)
print(accuracy)

with open(r"/gdrive/MyDrive/Learning ML/Linear Regression/Real_estate_model.pickle", "wb") as f:
  pickle.dump(linear_model, f)

pickle_in = open(r"/gdrive/MyDrive/Learning ML/Linear Regression/Real_estate_model.pickle", "rb")
linear_model = pickle.load(pickle_in)
print(linear_model.score(x_test, y_test))

"""# Getting Best Model"""

import os

best = 0
for i in range(10000):
  #split data for traingin & testing
  x_train, x_test, y_train, y_test = train_test_split(x_vars,y_var,test_size=0.1)
  #train model
  linear_model = LinearRegression()
  linear_model.fit(x_train,y_train)
  #test model
  accuracy = linear_model.score(x_test, y_test)
  print("Attempt #" + str(i+1) + ": " + str(accuracy))
  if accuracy > best:
    best = accuracy
    os.remove(r"/gdrive/MyDrive/Learning ML/Linear Regression/Real_estate_model.pickle") #wipe current model
    #refill with more accurate model
    with open(r"/gdrive/MyDrive/Learning ML/Linear Regression/Real_estate_model.pickle", "wb") as f:
      pickle.dump(linear_model, f)
    

print(best)

#open saved model
pickle_in = open(r"/gdrive/MyDrive/Learning ML/Linear Regression/Real_estate_model.pickle", "rb")
linear_model = pickle.load(pickle_in)

#mess around with results
print(linear_model.score(x_test, y_test))

print('coefficients:'+str(linear_model.coef_))
print('intercept:'+str(linear_model.intercept_))

predictions = linear_model.predict(x_test)
for c in range(len(predictions)):
  print(predictions[c], x_test[c],y_test[c], sep=" ")